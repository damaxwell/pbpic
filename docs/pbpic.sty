\NeedsTeXFormat{LaTeX2e}[1994/12/01]
\ProvidesPackage{pbpic}[2007/06/07 v0.21 Python in LaTeX]
\RequirePackage{graphicx}
\RequirePackage{ifplatform}
\newwrite\@out
\newwrite\@outtwo
\newread\@errin


\ifwindows
\def\@pathsep\@backslashchar
\else
\def\@pathsep{/}
\fi


\def\pyexec{%
\newlinechar='15
\begingroup \catcode`\^^M=12 %
\let\do\@makeother\dospecials\obeyspaces%
\@pyexec}

\begingroup \catcode `|=0 \catcode `[=1
\catcode`]=2 \catcode `\{=12 \catcode `\}=12
\catcode`\\=12 |gdef|@pyexec#1\end{pyexec}[|@pyexeccore[#1]|end[pyexec]]
|endgroup

\def\@pyexeccore#1{%
\immediate\write18{echo "#1" | python}}

\def\endpyexec{\endgroup}

\begingroup \catcode `|=0 \catcode `[=1
\catcode`]=2 \catcode `\{=12 \catcode `\}=12
\catcode`\\=12 |gdef|@xpython#1\end{pbpic}[|immediate|write|@out[#1]|immediate|write|@out[pbpend()]|end[pbpic]]
|endgroup

\begingroup
\catcode`\^^M=12\obeyspaces%
\gdef\@pymkdir{python -c "import os; 
try:
  os.mkdir('pbpic-figures')
except:
  pass"}%
\endgroup

\begingroup
\catcode`\^^M=12\obeyspaces%
\gdef\@pypreclean{python -c "import glob,os;
for f in glob.glob('\@pbpicfilename.[pdf,py.err,py.out]'):
  os.remove(f)"}%
\endgroup

\newif\ifpbpicinitialized
\def\pbpinit{%
\ifpbpicinitialized\else
\ifnum\pdf@shellescape=1\relax\else
\PackageError{pbpic}{^^J Shell escape must be enabled with -shell-escape}\fi%
\catcode`\^^M=12
\let\do\@makeother\dospecials\obeyspaces%
\immediate\write18{\@pymkdir}%
\fi}%

\newcounter{@pbpicfigcount}

\def\pbpic{\kernel@ifnextchar [{\@pbpic}{\stepcounter{@pbpicfigcount}%
\@pbpic[\jobname-pbpic\arabic{@pbpicfigcount}]}}

\def\@pbpic[#1]<#2,#3>{%
\pbpinit
\gdef\@pbpicfilename{pbpic-figures\@pathsep#1}
\immediate\openout\@out=\@pbpicfilename.py
\immediate\write\@out{from pbpic import *;pbpbegin(#2,#3,'\@pbpicfilename .pdf')}
\newlinechar='15
\begingroup \catcode`\^^M=12 %
\let\do\@makeother\dospecials\obeyspaces%
\@xpython}

\def\endpbpic{%
\endgroup
\immediate\closeout\@out

\immediate\openout\@out=pbpic-figures\@pathsep pbpexec.py
\immediate\write18{\@pypreclean}%
\immediate\write18{python  \space \@pbpicfilename.py  > \@pbpicfilename.py.out 2> \@pbpicfilename.py.err}%
\immediate\openin\@errin=\@pbpicfilename.py.err\relax
\immediate\read\@errin to \@pbpicpyerr
\ifeof\@errin\else\def\@emptyfile{\par}
\ifx\@emptyfile\@pbpicpyerr\message{\@pbpicpyerr}\else
\immediate\write18{cat \space \@pbpicfilename.py.err}
\errmessage{Python error processing \@pbpicfilename}%
\fi\fi
\immediate\closein\@errin
\includegraphics{\@pbpicfilename}%
}

% BUGS:
% 1. If anything gets send to stderr then it should be included
% in \begin{verbatim}...\end{verbatim} to be properly displayed
%
% \immediate\write18{cat \@pythoninclude\space\jobname.py | python > \jobname.py.out 2>\jobname.py.err}
%
% 2. Watch out for indentation done by aucTeX in Emacs
%
% 3. Let the package accept a "final version" option, such
% that the output of each python run is saved such that it can be
% inserted into the document by hand 
% (conference, journals are not likely to compile with
% shell_escape or have python).
%
% \gdef\@prepython{}
% \def\prepython#1{%
% \gdef\@prepython{#1}
% }
% sed -e 's/^  //g' cluster.py
% \immediate\write18{\@prepython\space\jobname.py > \
